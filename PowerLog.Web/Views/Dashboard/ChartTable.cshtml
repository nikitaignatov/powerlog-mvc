@model IEnumerable<PowerLog.Model.LoggedExercise>
@foreach (var date in Model.GroupBy(x => x.Date).OrderByDescending(x => x.Key))
{
    var counter = 0;
    foreach (var exercises in date.GroupBy(x => x.Exercise))
    {
    <div id="item-@(++counter)" class="site">

        <div class="btn-group pull-right">
            <a class="btn " href="@Url.RouteUrl("LogProgress", new { id = exercises.Key.ID, year = 1, month = 1, day = 1 })">View progress <i class="icon-signal"></i></a>
            <a class="btn prev" href="#item-@(counter - 1)"><i class="icon-chevron-up"></i></a>
            <a class="btn next" href="#item-@(counter + 1)"><i class="icon-chevron-down"></i></a>
        </div>

        <h2>@exercises.Key.Name</h2>
        <div class="container-fluid">
            <div class="row-fluid">
                <div id="chart-container-@exercises.Key.ID" style=" height:200px; margin: 0 auto">
                </div>
            </div>
            <div class="row-fluid">
                <table class="table table-condensed table-striped">
                    <thead>
                        <tr>
                            <th>reps
                            </th>
                            <th>weight</th>
                            <th>1 Rep Max</th>
                            <th>load</th>
                            <th>remarks</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in exercises)
                        {
                            <tr>
                                <td align="right">
                                    @Html.DisplayFor(modelItem => item.Reps)
                                </td>
                                <td>
                                    <strong>@Html.DisplayFor(modelItem => item.Weight)</strong> @item.WeightUnitName
                                </td>
                                <td>

                                    <strong>@(item.OneRepMax)</strong> @item.WeightUnitName
                                </td>
                                <td>
                                    <strong>@(item.Weight * item.Reps)</strong> @item.WeightUnitName
                                </td>
                                <td>
                                    @if (item.FailedToLift)
                                    {
                                        <span class="label label-important">Failed to lift</span>
                                    }
                                    @if (item.MaxEffort)
                                    {
                    
                                        <span class="label label-success">Max effort</span>
                                    }
                                    @if (item.ToFailure)
                                    {
                    
                                        <span class="label label-important">To Failure</span>
                                    }
                                    @if (!string.IsNullOrWhiteSpace(item.Comment))
                                    {
                                        <button class="comment btn btn-mini" data-content="@item.Comment" data-title="Note!" data-trigger="hover" data-placement="left"><i class="icon-comment"></i></button>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                    <tfoot>
                        <tr style="color: #aaa;">
                            <td colspan="3">[<strong>@exercises.Sum(x => x.Reps)</strong> lifts] 
                            </td>
                            <td colspan="4">[<strong>@exercises.Sum(x => x.Load) @exercises.FirstOrDefault().WeightUnitName</strong> total load]
                            </td>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>
    }
}