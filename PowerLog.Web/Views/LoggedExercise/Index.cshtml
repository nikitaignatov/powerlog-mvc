@using System.Globalization
@using System.Text.RegularExpressions
@using PowerLog.Model
@model IEnumerable<PowerLog.Model.LoggedExercise>

@{
    ViewBag.Title = "Index";
    var title = new Func<string, IEnumerable<LoggedExercise>, string>(
        (string a, IEnumerable<LoggedExercise> e) =>
        string.Format("{0}{1} workout", string.IsNullOrWhiteSpace(a) ? "" : a + " - ",
        string.Join(", ", e.GroupBy(x => x.Exercise.BodyPart).OrderByDescending(x => x.Sum(y => y.Load)).Select(x => x.Key).Take(3))
        ));


    var clearLocalStorage = false;
    if (ViewBag.ClearLocalStorage != null)
    {
        clearLocalStorage = (bool)ViewBag.ClearLocalStorage;
    }
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryui")
    <script type="text/javascript">
            @if (clearLocalStorage)
            { 
        <text>
        localStorage.removeItem("expressions");
        </text>   
            }
    </script>
}
@using (Html.BeginForm("Filter", "LoggedExercise", FormMethod.Post))
{
    <div class="well">
        <div class="row-fluid">
            <div class="span3">
                @Html.DropDownList("ExersiceID", null, null, new { multiple = "multiple" })
            </div>
            <div class="span3">
                @Html.DropDownList("Force", null, "-- Push / Pull --")
            </div>
            <div class="span3">
                @Html.DropDownList("BodyPart",null, null, new { multiple = "multiple" })
            </div>
            <div class="span3">
                @Html.DropDownList("Mechanics", null, "-- Compound / Isolated --")
            </div>
        </div>
        <div class="row-fluid">
            <input type="submit" value="Filter" class="btn btn-large btn-block" />
        </div>
    </div>
}
<div class=" row-fluid">
    <div class="antiscroll-wrap span6">
        <div class="antiscroll-inner row-fluid">
            <table class="table  table-hover table-condensed">
                <thead>
                    <tr>
                        <th>date</th>
                        <th>Exercise</th>
                        <th>lifts</th>
                        <th>load</th>
                        <th>avg. reps</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var date in Model.GroupBy(x => x.Date).OrderByDescending(x => x.Key))
                    {
                        var summary = date.AsEnumerable().Summarize();
                        <tr>
                            <td>@date.Key.ToString("dd. MMM")</td>
                            <td>
                                @Html.RouteLink(title("", date), "LogDetails", new { year = date.Key.Year, month = date.Key.Month, day = date.Key.Day, title = Regex.Replace(title("", date).ToLower(), @"\s+|,|\.", "-").Replace("--", "-") }, null)
                            </td>
                            <td>@summary.TotalReps</td>
                            <td>@summary.TotalVolume.ToString("#,0")</td>
                            <td>@summary.AverageReps.ToString("#.0")</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
