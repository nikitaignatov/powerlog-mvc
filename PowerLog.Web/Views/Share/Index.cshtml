@model IEnumerable<PowerLog.Model.LoggedExercise>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section scripts
{
    @Scripts.Render("~/bundles/jqueryui")
    <script src="/Scripts/js/highcharts.js" type="text/javascript"></script>
    <script id="previewTemplate" type="text/x-jquery-tmpl">
        <tr class="title">
            <td>${Exercise} 
            </td>
            <td>{{each Sets}}
                <strong>${Reps}</strong><small>x</small><strong>${Weight}</strong><small>kg</small>
                {{if Comment}}                                            
                <button class="comment btn btn-mini" type="button" data-content="${Comment}" data-title="Note:" data-original-title=""><i class="icon-comment"></i></button>
                {{/if}} 
                {{if FailedToLift}}  
                <span class="label label-important">failed</span>
                {{/if}} 
                {{if MaxEffort}}  
                <span class="label label-success">max</span>
                {{/if}} 
                {{if ToFailure}}  
                <span class="label label-important">to failure</span>
                {{/if}} 
                <br />
                {{/each}}                
            </td>
            <td>{{each Sets}}
                <strong>${OneRepMax}</strong><small>kg</small>
                <br />
                {{/each}}                
            </td>
            <td>{{each Sets}}
                <strong>${Reps*Weight}</strong><small>kg</small>
                <br />
                {{/each}}                
            </td>
        </tr>
    </script>
    <script type="text/javascript">
        function GetDate(jsonDate) {
            var value = new Date(parseInt(jsonDate.substr(6)));
            return value.getMonth() + 1 + "/" + value.getDate() + "/" + value.getFullYear();
        }

        function getPreview(date, exrp) {
            $.ajax({
                dataType: "json",
                type: 'POST',
                data: { date: date, expression: exrp },
                url: "/LoggedExercise/PreviewLog",
                success: function (data) {
                    $("#expressionError").hide();
                    $("#expressionError").html('');
                    $("#preview tbody").html('');
                    $("#previewTemplate").tmpl(data)
                        .appendTo("#preview tbody");
                },
                error: function (data) {
                    console.log(data);
                    $("#expressionError").html(data.statusText);
                    $("#expressionError").show();
                    console.log('failure:' + data.status + ':' + data.statusText);
                }
            });
        }

        $("#preview tbody").html('');
        var expr = $("#expression");
        expr.keyup(function (e) {
            var date = $("#Date").val();
            var expr = $(this).val();
            getPreview(date, expr);
        });

        expr.typeahead({
            items: 15,
            matcher: function (item) {
                return true;
            },
            source: function (query, process) {

                function test(q) {
                    return !/\d/.test(q) && ($.trim(q) === q.toString());
                }

                if (test(query)) {
                    return $.get('/exercise/get', { q: query }, function (data) {
                        return process(data);
                    });
                } 
                return;
            }
        });

        expr.focus();
        $('.comment').live('click', function () {
            $(this).popover();
        });
        $('blockquote').click(function () {
            var text = $(this).text().toString();
            $("#expression").text(text);
            $("#expression").trigger("keyup");
        });
    </script>
}

<h2>Share Workout</h2>
@using (Html.BeginForm("Share", "Share", FormMethod.Post))
{
    <style>
        #expression {
            text-transform: lowercase;
        }

        #preview {
            background: #fff;
        }

            #preview td:nth-child(1) {
                width: 30%;
            }

        table td:nth-child(3) {
            color: #aaa;
        }

        table td:nth-child(4) {
            color: #aaa;
        }
        
        blockquote{
            cursor: pointer;
        }
    </style>
    <div class="">
        <div class="row-fluid">
            <div class="span6 well">
                <input
                    name="Title"
                    id="Title"
                    type="text"
                    value=""
                    placeholder="workout title"
                    autocomplete="Off" />
                <input
                    name="Date"
                    id="Date"
                    type="date"
                    value="@DateTime.Now.ToString("yyyy-MM-dd")"
                    autocomplete="Off" />
                <textarea
                    data-title="Tags"
                    data-html="true"
                    data-placement="bottom"
                    name="expression"
                    id="expression"
                    placeholder="barbell bench press 12x200 10x210 8x220-tf"
                    autocomplete="Off" rows="6" class="span12"></textarea>
                <div id="expressionError" class="alert alert-info">
                </div>
                <table id="preview" class="table table-bordered table-hover table-condensed">
                    <thead>
                        <th>Exercise</th>
                        <th>Sets</th>
                        <th>1RM</th>
                        <th>Volume</th>
                    </thead>
                    <tbody>
                    </tbody>
                </table>

                <div class="form-actions">
                    <input type="submit" value="Log" class="btn btn-primary" />

                </div>
            </div>
            <div class="span6 mini-layout">
                <h3>How to use</h3>
                <p>To log your workout routine start typing exercise name followed by sets like in the example below:</p>
                <blockquote>barbell bench press 12x200 10x210 8x220-tf;<br />
                    barbell curl 6x12x50;
                        <br />
                    squat 300 320 330 340-ftl
                </blockquote>
                <blockquote>barbell bench press
                    <br />
                    12x100
                    <br />
                    2x10x210-ftl-note(hi mom)-max-tf-fr(2)<br />
                    8x220-max
                </blockquote>
                <blockquote>barbell curl
                    <br />
                    3x10x10<br />
                </blockquote>
                <h3>Annotations</h3>
                <p>You can annotate your sets with following flags</p>
                <dl>
                    <dt>-Note(some text)</dt>
                    <dd>
                        <button class="comment btn btn-mini" type="button" data-content="some text" data-title="Note:" data-original-title=""><i class="icon-comment"></i></button>
                        will be added as a note to this set</dd>
                    <dt>-MAX</dt>
                    <dd><span class="label label-success">max</span> indicates that this was a max effort lift</dd>
                    <dt>-<abbr title="Failed to lift">FTL</abbr></dt>
                    <dd><span class="label label-important">failed</span> indicates that you failed to lift the weight</dd>
                    <dt>-<abbr title="To failure">TF</abbr></dt>
                    <dd><span class="label label-important">to failure</span> indicates that this set was performed to failure</dd>
                </dl>

            </div>
        </div>
    </div>
}
@*<div class="tabbable">
    <ul class="nav nav-tabs">
        <li class="active"><a href="#view" data-toggle="tab">View</a></li>
        <li><a href="#json" data-toggle="tab">Json</a></li>
        <li><a href="#xml" data-toggle="tab">Xml</a></li>
        <li><a href="#csv" data-toggle="tab">Csv</a></li>
    </ul>
    <div class="tab-content">
        <div class="tab-pane" id="json">
            <pre>
<code class="json">
@ViewBag.json
</code>
            </pre>
        </div>
        <div class="tab-pane" id="xml">
            <pre>
<code class="xml">
@ViewBag.xml
</code>
            </pre>
        </div>
        <div class="tab-pane" id="csv">
            <pre>
<code class="csv">
@ViewBag.csv
</code>
            </pre>
        </div>
        <div class="tab-pane active" id="view">
            <table class="table">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Date)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ExerciseID)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Weight)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Reps)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Comment)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.FailedToLift)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ToFailure)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.MaxEffort)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.LongNegative)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ForcedReps)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.OneRepMax)
                    </th>
                    <th></th>
                </tr>

                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Date)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ExerciseID)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Weight)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Reps)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Comment)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.FailedToLift)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ToFailure)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.MaxEffort)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.LongNegative)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ForcedReps)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.OneRepMax)
                        </td>
                        <td>
                            @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
            @Html.ActionLink("Details", "Details", new { id = item.ID }) |
            @Html.ActionLink("Delete", "Delete", new { id = item.ID })
                        </td>
                    </tr>
                }

            </table>
        </div>
    </div>
</div>*@
