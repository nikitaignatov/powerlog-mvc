@model PowerLog.Model.SharedExercise

@{
    ViewBag.Title = Model.Title;
    Layout = "~/Views/Shared/_Layout.cshtml";
    var clearLocalStorage = false;
    if (ViewBag.ClearLocalStorage != null)
    {
        clearLocalStorage = (bool)ViewBag.ClearLocalStorage;
    }
}
@section scripts{
    <script type="text/javascript">
        $('.comment').popover();
        @if (clearLocalStorage)
        { 
            @:localStorage.removeItem("expressions");
                                }
    </script>
}
<style>
    table td:nth-child(3), table td:nth-child(4) {
        color: #aaa;
    }
</style>
<div class="container-fluid">
    <div class="tabbable">
        <ul class="nav nav-tabs">
            <li class="active"><a href="#workout-report" data-toggle="tab">Report</a></li>
            <li class="dropdown">
                <a class="dropdown-toggle" id="dLabel" role="button" data-toggle="dropdown" data-target="#" href="/page.html">Download
                    <b class="caret"></b>
                </a>
                <ul class="dropdown-menu" role="menu" aria-labelledby="dLabel">
                    <li><a href="#json" data-toggle="tab">Json</a></li>
                    <li><a href="#csv" data-toggle="tab">Csv</a></li>
                </ul>
            </li>
        </ul>
        <div class="tab-content">
            <div class="tab-pane" id="json">
                <pre>
<code class="json">
@ViewBag.json
</code>
            </pre>
            </div>
            <div class="tab-pane" id="csv">
                <pre>
<code class="csv">
@ViewBag.csv
</code>
            </pre>
            </div>
            <div class="row-fluid">

                <div class="tab-pane active span6" id="workout-report">
                    @{ Html.RenderPartial("~/Views/Dashboard/DashboardTables.cshtml", Model.LoggedExercises, ViewData);}
                </div>
                <div class="span6">
                    <table class="table table-bordered table-condensed table-hover">
                        @foreach (var date in Model.LoggedExercises.GroupBy(x => x.Date).OrderByDescending(x => x.Key))
                        {
                            <tr>
                                <th>@date.Key.ToShortDateString()</th>
                                <td colspan="7">[<strong>@date.Sum(x => x.Reps)</strong> lifts] 
                                    [<strong>@date.Sum(x => x.Weight * x.Reps)kg</strong> total load]
                                </td>
                            </tr>
                            foreach (var exercises in date.GroupBy(x => x.Exercise))
                            {
                            <tr>
                                <th colspan="7">
                                    @exercises.Key.Name
                                </th>
                            </tr>
                            <tr>
                                <th>reps
                                </th>
                                <th>weight</th>
                                <th>1 Rep Max</th>
                                <th>load</th>
                                <th class="hidden-phone">remarks</th>
                                <th class="hidden-phone">notes</th>
                            </tr>
                                foreach (var item in exercises)
                                {
                            <tr>
                                <td align="right">
                                    @Html.DisplayFor(modelItem => item.Reps)
                                </td>
                                <td>
                                    <strong>@Html.DisplayFor(modelItem => item.Weight)</strong>kg
                                </td>
                                <td>

                                    <strong>@(item.OneRepMax)</strong>kg
                                </td>
                                <td>
                                    <strong>@(item.Load)</strong>kg
                                </td>
                                <td class="hidden-phone">
                                    @if (item.FailedToLift)
                                    {
                                        <span class="label label-important">ftl</span>
                                    }
                                    @if (item.MaxEffort)
                                    {
                    
                                        <span class="label label-success">max</span>
                                    }
                                    @if (item.ToFailure)
                                    {
                    
                                        <span class="label label-important">tf</span>
                                    }
                                </td>
                                <td class="hidden-phone">
                                    @if (!string.IsNullOrWhiteSpace(item.Comment))
                                    {@item.Comment
                                        <button class="comment btn btn-mini" data-content="@item.Comment" data-placement="left" data-title="Note:"><i class="icon-comment"></i></button>
                                    }
                                </td>
                            </tr>
                                }
                            <tr style="color: #aaa;">
                                <td colspan="3">[<strong>@exercises.Sum(x => x.Reps)</strong> lifts] 
                                </td>
                                <td colspan="4">[<strong>@exercises.Sum(x => x.Weight * x.Reps)kg</strong> total load]
                                </td>
                            </tr>
                            }
                        }

                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
